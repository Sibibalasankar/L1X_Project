import joblib
import os
import pandas as pd

# Load the trained model and vectorizer (from the CSV training script)
model = joblib.load('./models/vulnerability_model.pkl')  # Update path if needed
vectorizer = joblib.load('./models/tfidf_vectorizer.pkl')  # Update path if needed

# 👉 Set the path to your Solidity file here
sol_file_path = './sample_contracts/DOS.sol'  # Replace with your contract path

def predict_vulnerability(file_path):
    if not os.path.exists(file_path):
        print(f"❌ File not found: {file_path}")
        return

    # Read Solidity contract content
    with open(file_path, 'r', encoding='utf-8') as f:
        code = f.read()

    # Vectorize the code
    code_vec = vectorizer.transform([code])
    
    # Get prediction and confidence scores
    prediction = model.predict(code_vec)[0]
    probabilities = model.predict_proba(code_vec)[0]
    
    # Map classes to their probabilities
    confidence_scores = {
        model.classes_[i]: f"{prob:.2%}" 
        for i, prob in enumerate(probabilities)
    }

    # Display results
    print("🔍 Vulnerability Prediction Results:")
    print(f"📄 File: {os.path.basename(file_path)}")
    print(f"🔮 Predicted Vulnerability: {prediction}")
    print("\n📊 Confidence Scores:")
    for vuln, score in confidence_scores.items():
        print(f"  - {vuln}: {score}")

# Run prediction
predict_vulnerability(sol_file_path)