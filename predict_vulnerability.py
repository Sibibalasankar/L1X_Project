import joblib
import os

# Load the trained model and vectorizer
model = joblib.load('./models/vulnerability_model_clean.pkl')
vectorizer = joblib.load('./models/tfidf_vectorizer_clean.pkl')
# üëâ Set the path to your Solidity file here
sol_file_path = './sample_contracts/access.sol'  # Update this path as needed

def predict_vulnerability(file_path):
    if not os.path.exists(file_path):
        print(f"‚ùå File not found: {file_path}")
        return

    # Read Solidity contract content
    with open(file_path, 'r', encoding='utf-8') as f:
        code = f.read()

    # Vectorize the code and make prediction
    code_vec = vectorizer.transform([code])
    prediction = model.predict(code_vec)[0]

    print(f"‚úÖ Predicted Vulnerability Label: {prediction}")

# Call the prediction function
predict_vulnerability(sol_file_path)
